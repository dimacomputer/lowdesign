name: Deploy all sites to NAS

on:
  push:
    branches: [ "main" ]

concurrency:
  group: deploy-to-nas
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        project: [ "malati", "lowdesign" ]

    steps:
      - name: Write SSH key & known_hosts
        env:
          NAS_KEY: ${{ secrets.NAS_KEY }}
          NAS_HOST: ${{ secrets.NAS_HOST }}
          NAS_PORT: ${{ secrets.NAS_PORT }}
        run: |
          set -eu
          umask 077
          mkdir -p ~/.ssh
          printf '%s\n' "$NAS_KEY" > ~/.ssh/id_nas
          chmod 600 ~/.ssh/id_nas
          ssh-keyscan -p "$NAS_PORT" "$NAS_HOST" >> ~/.ssh/known_hosts

      - name: Trigger pull on NAS (with retry)
        env:
          NAS_HOST: ${{ secrets.NAS_HOST }}
          NAS_PORT: ${{ secrets.NAS_PORT }}
          NAS_USER: ${{ secrets.NAS_USER }}
        run: |
          set -euo pipefail
          run_ssh() {
            ssh -i ~/.ssh/id_nas -o ConnectTimeout=10 -o StrictHostKeyChecking=accept-new \
                -p "$NAS_PORT" "$NAS_USER@$NAS_HOST" "$@"
          }
          echo "=== Deploying project: ${{ matrix.project }} ==="

          # до 5 попыток: pull.sh и проверка, что HEAD темы совпал с origin/main
          for i in 1 2 3 4 5; do
            run_ssh "NAS_PROJECT=${{ matrix.project }} /bin/sh /volume1/web/${{ matrix.project }}/scripts/pull.sh"

            REMOTE_SHA=$(run_ssh "cd /volume1/web/${{ matrix.project }}/public/wp-content/themes/${{ matrix.project }} 2>/dev/null || cd /volume1/web/${{ matrix.project }}/public/wp-content/themes/lowdesign; git rev-parse --short origin/main" || echo "")
            LOCAL_SHA=$(run_ssh "cd /volume1/web/${{ matrix.project }}/public/wp-content/themes/${{ matrix.project }} 2>/dev/null || cd /volume1/web/${{ matrix.project }}/public/wp-content/themes/lowdesign; git rev-parse --short HEAD" || echo "")

            echo "Attempt $i: origin/main=$REMOTE_SHA, working-copy=$LOCAL_SHA"
            if [ -n "$REMOTE_SHA" ] && [ "$REMOTE_SHA" = "$LOCAL_SHA" ]; then
              echo "OK: theme is at latest commit."
              break
            fi
            if [ "$i" -lt 5 ]; then
              echo "Wait and retry..."
              sleep 5
            else
              echo "WARN: after retries HEAD != origin/main — check NAS logs."
            fi
          done

      - name: Show deploy log tail
        env:
          NAS_HOST: ${{ secrets.NAS_HOST }}
          NAS_PORT: ${{ secrets.NAS_PORT }}
          NAS_USER: ${{ secrets.NAS_USER }}
        run: |
          ssh -i ~/.ssh/id_nas -p "$NAS_PORT" -o StrictHostKeyChecking=accept-new \
            "$NAS_USER@$NAS_HOST" "tail -n 120 /volume1/web/${{ matrix.project }}/logs/pull_${{ matrix.project }}.log || true"